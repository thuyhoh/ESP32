#include <WiFi.h>
#include <WebServer.h>
WebServer server(80);
#include <EEPROM.h>
#define BLYNK_PRINT Serial
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>
#define EEPROM_SIZE 512

#include <Ticker.h>
#include <time.h>
Ticker ticker;

#define LED1 2
#define LED2 16



const char webpage[] PROGMEM = R"=====(
 <!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8"> 
 <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<style>
body {font-family: Time New Roman;}
.tab {
    overflow: hidden;
    border: 1px solid #ccc;
    background-color: #FFCC00;
}

.button {
  display: inline-block;
  padding: 15px 25px;
  font-size: 24px;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  outline: none;
  color: #fff;
  background-color: #4CAF50;
  border: none;
  border-radius: 15px;
  box-shadow: 0 9px #999;
}
.button:hover {background-color: #3e8e41}
.button:active {
  background-color: #3e8e41;
  box-shadow: 0 5px #666;
  transform: translateY(4px);
}
</style>
<script type="text/javascript">




function SEND()
{
  var ssid =  document.getElementById("ssid").value ;
  var pass =  document.getElementById("pass").value ;
  var key =  document.getElementById("key").value ;
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET","/webconfigwifi?ssid="+ssid+"&pass="+pass+"&key="+key,true);      
  xhttp.send();
}
</script>
<body  style= "background-color: #000000;">       

<table width="500" height="400" border="4" cellpadding="1" align="center">
     <tr>
        <th  bgcolor="#66ff99" colspan="2"> <center> <font size="10"> <span style = "color: red">CONFIG WIFI AND CONNECT APP</span></font></center></th>
   </tr>  
  
  
   <tr>
        <td  bgcolor="#FFFF00" colspan="1"> <center> <span style = "color: Blue"> <b> Tên WiFi</b> </span> </center> </td>
        <td bgcolor="#FF00FF" colspan="1">
     <center>
        <input id="ssid" type="text" size="40" placeholder="Tên WiFi" >
      </center>

        </td>
     </tr> 
   
   <tr>
        <td  bgcolor="#FFFF00" colspan="1"> <center> <span style = "color: Blue"> <b> Mật Khẩu WiFi</b> </span> </center> </td>
        <td bgcolor="#FF00FF" colspan="1">
      <center>
        <input id="pass" type="text" size="40" placeholder="Mật Khẩu WiFi" >
      </center>
  
        </td>
     </tr>  
   <tr>
        <td  bgcolor="#FFFF00" colspan="1"> <center> <span style = "color: Blue"> <b> Mã Key App</b> </span> </center> </td>
        <td bgcolor="#FF00FF" colspan="1">
      <center>
        <input id="key" type="text" size="40" placeholder="Mã Key App"  >
  </center>
        </td>
     </tr> 
   <tr>
        <td  bgcolor="#FFFF00" colspan="1"> <center> <span style = "color: Blue"> <b> Gửi</b> </span> </center> </td>
        <td bgcolor="#FF00FF" colspan="1">
      <center>
         <button  type="button" class="button" onclick = "SEND()" style="height:50px; width:300px; ">Gửi</button>
      </center>
        </td>
     </tr>
  </table>

</body>
</html>  
)=====";

long last = 0;
int dem = 0;
bool connectwifi = false; 
bool connectkey = false;
bool connectwifiEEPROM = false;
int lengthssid = 20; // 1 đến 20
int lengthpass = 20; // 21 đến 40
int lengthkey = 40;  // 41 đế 80//
int addressSsid = 81;  
int addressPass = 82; 
int addressKey = 83; 
bool checklengthwifikey = false;
const char* ssid1 = "";
const char* pass1 = "";
const char* key1 = "";


const char* ssid = "";
const char* pass = "";
const char* key = "";

const char* ssidapp = "ESP32CONFIG";
const char* passapp = "12341234";

String ssid3 , pass3 , key3 = "";
String ssid2 , pass2 , key2  = "";
void webhtml()
{
  String s = webpage; 
  server.send(200, "text/html", s); 
}

void webconfigwifi()
{
  Serial.println("Write EEPROM Config");
  ssid3 = "", pass3 = "", key3 = "";
  ssid3 = server.arg("ssid");
  pass3 = server.arg("pass");
  key3 = server.arg("key");
  Serial.print("ssid3:");
  Serial.println(ssid3);
  Serial.print("pass3:");
  Serial.println(pass3);
  Serial.print("key3:");
  Serial.println(key3);

  ssid1 = "";
  pass1 = "";
  ssid1 = ssid3.c_str();
  pass1 = pass3.c_str();
  key = key3.c_str();
  Serial.print("ssid1:");
  Serial.println(ssid1);
  Serial.print("pass1:");
  Serial.println(pass1);
  Serial.print("key:");
  Serial.println(key);

  Serial.println();
  Serial.print("Connecting to Wifi:");
  WiFi.begin(ssid1, pass1);

  while (WiFi.status() != WL_CONNECTED)
  {
    server.handleClient();
    delay(500);
    Serial.print(".");
    dem++;
    if(dem >= 30)
    {
      connectwifi = false;
      Serial.println("");
      Serial.println("Not Connect to wifi");
      dem = 0;
      break;
    } 
  }
  if(WiFi.status() == WL_CONNECTED)
  {
    connectwifi = true;
    // cho kết nối Blynk
    Blynk.begin(key, ssid1, pass1);
    // Luu EEPROM
    WriteEEPROM(String(ssid3), String(pass3), String(key3));   
  }
  else
  {
    connectwifi = false;
  }
   
}

void ConnectWiFi()
{
  Serial.println(">>>>>>>>>>>>>>>>>>>Read EEOROM KHOI DONG<<<<<<<<<<<<<<<<<<<<<<<");
  lengthssid = EEPROM.read(addressSsid);delay(5);
  lengthpass = EEPROM.read(addressPass);delay(5);
  lengthkey = EEPROM.read(addressKey); delay(5);
  ssid2 = "", pass2 = "", key2  = "";
  for (int i = 0 ; i < lengthssid ; i++)
  {
    ssid2 +=(char)EEPROM.read(i); delay(10);
  }
  for (int i = 21 ; i < lengthpass + 21; i++)
  {
    pass2 += (char)EEPROM.read(i);delay(10);
  }
  for (int i = 41 ; i < lengthkey + 41; i++)
  {
    key2 += (char)EEPROM.read(i);delay(10);
  }
  ssid = ssid2.c_str();
  pass = pass2.c_str();
  key = key2.c_str();
  Serial.print("ssid:");Serial.println(ssid);
  Serial.print("pass:");Serial.println(pass);
  Serial.print("key:");Serial.println(key);
  WiFi.mode(WIFI_AP_STA);WiFi.disconnect(); WiFi.begin(ssid, pass);
  
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
    dem++;
    if(dem >= 15)
    {
      connectwifi = false;
      Serial.println("");
      Serial.println("Not Connect to wifi");
      dem = 0;
      break;
    } 
  }
  if(WiFi.status() == WL_CONNECTED)
  {
    connectwifi = true; 
  }
  else 
  {
    connectwifi = false;
  }
}

void configwifikeyblynk()
{
    delay(1000);
    Serial.println("");
    WiFi.softAP(ssidapp, passapp);
    IPAddress IP = WiFi.softAPIP();
    Serial.print("AP IP address: ");
    Serial.println(IP);
	
    server.on("/", webhtml);
    server.on("/webconfigwifi", webconfigwifi);
    server.begin();
    Serial.println("Server start wifi config");
    last = millis();
    while(true)
    {
      server.handleClient();
     if(connectwifi)
     {
        WiFi.mode(WIFI_STA);
        break;
     }
   }
}
void tick()
{

  int state = digitalRead(LED1);  // get the current state of GPIO1 pin
  digitalWrite(LED1, !state);     // set pin to the opposite state
}

WidgetLED led(V0);
BlynkTimer timer;

void blinkLedWidget()
{
  if (led.getValue())
  {
    led.off();
  } else
  {
    led.on();
  }
}

BLYNK_WRITE(V1)
{
  int kenh1 = param.asInt();
  Serial.print("kenh1:");
  Serial.println(kenh1);
}

BLYNK_WRITE(V2)
{
  int kenh1 = param.asInt();
  Serial.print("kenh1:");
  Serial.println(kenh1);
}

BLYNK_WRITE(V3)
{
  int kenh1 = param.asInt();
  Serial.print("kenh1:");
  Serial.println(kenh1);
}

BLYNK_WRITE(V4)
{
  int kenh1 = param.asInt();
  Serial.print("kenh1:");
  Serial.println(kenh1);
}

BLYNK_WRITE(V5)
{
  int btn5 = param.asInt();

  Serial.print("btn5:");
  Serial.println(btn5);
}



void setup(void)
{
  Serial.begin(9600);
  while (!Serial);
  pinMode(LED1, OUTPUT);
  digitalWrite(LED1, LOW);
  if (!EEPROM.begin(EEPROM_SIZE)) 
  {
     Serial.println("failed to init EEPROM");
     delay(2000);
  }
  
 
  ConnectWiFi(); 
  
  if(!connectwifi)
  {
    ticker.attach(0.1, tick);
    configwifikeyblynk();
  }
  else if(connectwifi)
  {
    Serial.print("Successfully connected to WIFI EEPROM: ");
    Serial.println(ssid);
    Serial.print("IP address: ");
    Serial.println(WiFi.localIP());
    Blynk.begin(key, ssid, pass);
  }
  ticker.detach();
  digitalWrite(LED1, HIGH);
  
}

void loop(void) 
{
  Blynk.run();
  timer.run();
  if(WiFi.status() == WL_CONNECTED)
  {
    Serial.println("Connect to wifi rồi");
    delay(200);
  }
}

void  WriteEEPROM(String ssid3, String pass3, String key3)
{
  Serial.println(">>>Write EEPROM Data to Webserver:");
  lengthssid = ssid3.length(); 
  lengthpass = pass3.length();
  lengthkey = key3.length();  
  // Lưu độ dài vào EEPROM
  //int addressSsid = 81;  
  //int addressPass = 82; 
  //int addressKey = 83;
  EEPROM.write(addressSsid, lengthssid);delay(5);
  EEPROM.write(addressPass, lengthpass);delay(5);
  EEPROM.write(addressKey, lengthkey);delay(5);
  for (int i = 0 ; i < lengthssid ; i++)
  {
    EEPROM.write(i, ssid3.charAt(i));delay(5);
  }
   for (int i = 21 ; i < lengthpass + 21; i++)
  {
    EEPROM.write(i, pass3.charAt(i - 21));delay(5);
  }
  for (int i = 41 ; i < lengthkey + 41; i++)
  {
    EEPROM.write(i, key3.charAt(i - 41));delay(5);
  }
  EEPROM.commit();delay(5);
  
  Serial.println(">>>>>>>>>>>READ EEPROM<<<<<<<<<<<<<<<<<");
  lengthssid = EEPROM.read(addressSsid);delay(5);
  lengthpass = EEPROM.read(addressPass);delay(5);
  lengthkey = EEPROM.read(addressKey); delay(5);
  ssid2 = "", pass2 = "", key2  = "";
  for (int i = 0 ; i < lengthssid ; i++)
  {
    ssid2 +=(char)EEPROM.read(i); delay(10);
  }
  for (int i = 21 ; i < lengthpass + 21; i++)
  {
    pass2 += (char)EEPROM.read(i);delay(10);
  }
  for (int i = 41 ; i < lengthkey + 41; i++)
  {
    key2 += (char)EEPROM.read(i);delay(10);
  }
  Serial.print("ssid2:");
  Serial.println(ssid2);
  Serial.print("pass2:");
  Serial.println(pass2);
  Serial.print("key2:");
  Serial.println(key2);
  
}
